services:
  db:
    image: mariadb:11
    container_name: moulinette_db
    environment:
      MARIADB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MYSQL_DATABASE}
      MARIADB_USER: ${MYSQL_USER}
      MARIADB_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks: [internal]
    restart: unless-stopped

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: moulinette_php
    environment:
      APP_ENV: prod
      APP_SECRET: ${APP_SECRET}
      DATABASE_URL: >-
        mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}?serverVersion=mariadb-11.0.0
    volumes:
      - ./:/var/www/html:cached
    depends_on:
      - db
    networks: [internal]
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    container_name: moulinette_nginx
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    networks:
      - internal
      - traefik_proxy     # ← réseau Traefik global (E2C)
    labels:
      - traefik.enable=true
      - traefik.http.routers.moulinette.rule=Host(`${MAIN_HOST}`)
      - traefik.http.routers.moulinette.entrypoints=websecure
      - traefik.http.routers.moulinette.tls.certresolver=le
      - traefik.http.services.moulinette.loadbalancer.server.port=80
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: moulinette_pma
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - db
    networks:
      - internal
      - traefik_proxy     # ← réseau Traefik global (E2C)
    labels:
      - traefik.enable=true
      - traefik.http.routers.mlpma.rule=Host(`${PMA_HOST}`)
      - traefik.http.routers.mlpma.entrypoints=websecure
      - traefik.http.routers.mlpma.tls.certresolver=le
      - traefik.http.services.mlpma.loadbalancer.server.port=80
    restart: unless-stopped

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  internal:
    internal: true
  traefik_proxy:
    external: true
    name: e2c_proxy   # ← NOM EXACT Traefik global (E2C)
volumes:
  db_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
